foods:
-order foods alphabetically
-prevent duplicate ordering

parties:
-add a link in parties to place the order *for that table*
-fix show for table #3 ( i think its because it is having trouble showing orders)

orders:
-fix index page to show the food names beside the order id
-allow edit order id to add or remove a food item for that person/order
-figure out checkuot: sending the orders from the same party_id with an option to split the check 
-for later:
	-display index page as a table with order.id, food_name, party_id and remove order columns


employees:
-create table with:
	id
	username text
	party_id
	receipt_id
	created_at timestamp
	updated_at timestamp

-needs pages: 
	-create with username
	-sign in


receipts:
-create table with:
	id
	party_id
	employee_id
	tip_amount
	total_amont
	created_at timestamp
	updated_at timestamp



get the food names from the party info
	a = Party.find(3).foods.map |food|
		food.name
	end



you can only do order.food.name when the party_id is already specified
_____
[6] pry(#<Sinatra::Application>)> Party.find(22)
=> #<Party:0x007f9db131d340
 id: 22,
 guests: 4,
 paid: false,
 created_at: 2015-02-07 20:38:27 UTC,
 updated_at: 2015-02-07 22:13:21 UTC,
 table_number: 3>
[7] pry(#<Sinatra::Application>)> b=_
=> #<Party:0x007f9db131d340
 id: 22,
 guests: 4,
 paid: false,
 created_at: 2015-02-07 20:38:27 UTC,
 updated_at: 2015-02-07 22:13:21 UTC,
 table_number: 3>
[8] pry(#<Sinatra::Application>)> b.orders.all
=> [#<Order:0x007f9db1d62058
  id: 48,
  party_id: 22,
  created_at: 2015-02-07 22:12:34 UTC,
  updated_at: 2015-02-07 22:12:34 UTC,
  food_id: 3>,
 #<Order:0x007f9db1d61ef0
  id: 49,
  party_id: 22,
  created_at: 2015-02-07 22:13:17 UTC,
  updated_at: 2015-02-07 22:13:17 UTC,
  food_id: 3>,
 #<Order:0x007f9db1d61d88
  id: 50,
  party_id: 22,
  created_at: 2015-02-07 22:13:21 UTC,
  updated_at: 2015-02-07 22:13:21 UTC,
  food_id: 3>]
[9] pry(#<Sinatra::Application>)> c=_
=> [#<Order:0x007f9db1d62058
  id: 48,
  party_id: 22,
  created_at: 2015-02-07 22:12:34 UTC,
  updated_at: 2015-02-07 22:12:34 UTC,
  food_id: 3>,
 #<Order:0x007f9db1d61ef0
  id: 49,
  party_id: 22,
  created_at: 2015-02-07 22:13:17 UTC,
  updated_at: 2015-02-07 22:13:17 UTC,
  food_id: 3>,
 #<Order:0x007f9db1d61d88
  id: 50,
  party_id: 22,
  created_at: 2015-02-07 22:13:21 UTC,
  updated_at: 2015-02-07 22:13:21 UTC,
  food_id: 3>]
[10] pry(#<Sinatra::Application>)> c.map do |order|
[10] pry(#<Sinatra::Application>)*   order.food.name
[10] pry(#<Sinatra::Application>)* end  
=> ["California Roll", "California Roll", "California Roll"]


to get the sum of orders upon checkout:

collection = Receipt.foods.map do |food|
  food.price
end

sub_total = collection.inject(:+)

show on the closed page:
party_id
food_names and prices
subtotal
gratuity
total

finish show on employees erb


change paid to true when tip gets added

ella css:
* {
  padding: 0;
  border: 0;
  margin: 0;
  font: inherit; 
}

.print {
  border: 0;
  padding: 0;
  margin: 0;
  font: sans-serif; 
}

a {
  color: 8a8a8a;
  text-decoration: none;
  font-size: .75em;
  color: white;
  padding: 0 10px;
  border: 2px solid grey;
  margin: 5px 0;
  background-color: #888; }

a:hover {
  background-color: #ffffff;
  color: white; }

header {
  background-color: #727272;
  border-bottom: green 10px solid;
  font-size: 19em bold; }
  header h1 {
    text-align: center;
    font-size: 19em bold; }
  header nav {
    text-align: center;
    background-color: #626262; }
    header nav ul {
      font-size: 2em; }
      header nav ul li {
        display: inline; }
        header nav ul li + li {
          font-size: 10;
          padding-left: 15px; }

body .background {
  background-color: #8a8a8a;
  background-size: 80%;
  background-repeat: no-repeat;
  background-position: center; }
body h1 {
  text-align: center;
  font-size: 2em; }
body h2 {
  font-size: 3em;
  text-align: center; }
body h3 {
  font-size: 2em;
  text-indent: 180px;
  color: pink;
  background-color: black;
  display: inline; }
body li {
  color: hotpink;
  text-indent: 200px; }
body .unpaid {
  text-align: center;
  font-size: 1.4em;
  color: darkblue; }
body table th {
  font-size: 1.3em;
  background-color: lightgreen;
  border-bottom: 2px solid black; }
body table td {
  font-size: 1.3em;
  text-align: center;
  border-right: 1px solid black; }

footer {
  font-size: .75em;
  background-color: 888;
  text-align: center;
  padding-top: 50px;
  color: #ccc; }